{
    "openapi": "3.0.0",
    "info": {
        "title": "Agree Challenge",
        "description": "This API is an Agree's challege.",
        "contact": {
            "name": "Developer",
            "email": "ydobon@tset.test"
        },
        "version": "1.0"
    },
    "paths": {
        "/cards": {
            "get": {
                "tags": [
                    "Cards"
                ],
                "parameters": [
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "Query filters: pokemon name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "charizard"
                    },
                    {
                        "name": "filter[is_taken]",
                        "in": "query",
                        "description": "Query filters: if is taken (0 = false, 1 = true)",
                        "schema": {
                            "type": "string"
                        },
                        "example": 0
                    },
                    {
                        "name": "filter[expansionSet]",
                        "in": "query",
                        "description": "Query filters: espansion set name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "base set 2"
                    },
                    {
                        "name": "filter[pokemonTypes]",
                        "in": "query",
                        "description": "Query filters: pokemon type",
                        "schema": {
                            "type": "string"
                        },
                        "example": "fire"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts: separated with commas and colon to set the direction, with no direction default is asc. Sorts alowed name, health_points, price, is_first_edition, is_taken",
                        "schema": {
                            "type": "string"
                        },
                        "example": "name,price:desc,is_taken:asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Card"
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PageLinks"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Cards"
                ],
                "summary": "Create cards",
                "description": "Create cards",
                "requestBody": {
                    "description": "Create card",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Card"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cards/{id}": {
            "get": {
                "tags": [
                    "Cards"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "examples": {
                            "int": {
                                "summary": "An int value.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Card"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Cards"
                ],
                "summary": "Updates a Card",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "An int value.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create card",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Card"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cards"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "examples": {
                            "int": {
                                "summary": "An int value.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "date",
                                            "example": "Resource deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card_rarities": {
            "get": {
                "tags": [
                    "CardRarity"
                ],
                "operationId": "/card_rarities",
                "responses": {
                    "200": {
                        "description": "List rarity card avaliable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/enumJson"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expansion_set": {
            "get": {
                "tags": [
                    "ExpansionSet"
                ],
                "operationId": "/expansion_set",
                "responses": {
                    "200": {
                        "description": "List expansions set card avaliable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/enumJson"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "App info"
                ],
                "operationId": "/",
                "responses": {
                    "200": {
                        "description": "Returns basic app info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InfoData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/is_alive": {
            "get": {
                "tags": [
                    "App info"
                ],
                "operationId": "/is_alive",
                "responses": {
                    "204": {
                        "description": "check if the app is alive"
                    },
                    "504": {
                        "description": "Server not available"
                    }
                }
            }
        },
        "/pokemon_type": {
            "get": {
                "tags": [
                    "PokemonType"
                ],
                "operationId": "/pokemon_type",
                "responses": {
                    "200": {
                        "description": "List pokemon types avaliable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/enumJson"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CardRequest": {
                "required": [
                    "name",
                    "health_points",
                    "expansion_set",
                    "pokemon_type",
                    "card_rarity",
                    "price",
                    "image_url"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "dito"
                    },
                    "health_points": {
                        "type": "integer",
                        "example": "50"
                    },
                    "is_first_edition": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "is_taken": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "expansion_set": {
                        "type": "integer",
                        "example": "1"
                    },
                    "pokemon_type": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    "card_rarity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "price": {
                        "type": "number",
                        "example": "10.50"
                    },
                    "image_url": {
                        "type": "url",
                        "format": "url",
                        "example": "www.pokeimage.com/01"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CardRequest"
                }
            },
            "InfoData": {
                "properties": {
                    "app_name": {
                        "type": "string",
                        "example": "app name"
                    },
                    "framework": {
                        "type": "string",
                        "example": "Lumen (8.3.1) (Laravel Components ^8.0)"
                    },
                    "timezone": {
                        "type": "string",
                        "example": "UTC"
                    },
                    "current_datetime": {
                        "type": "datetime",
                        "example": "2021-11-25T23:19:09.814204Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "InfoData"
                }
            },
            "PageLinks": {
                "properties": {
                    "first": {
                        "type": "url",
                        "example": "http://agm.test/cards?page=1"
                    },
                    "last": {
                        "type": "url",
                        "example": "http://agm.test/cards?page=10"
                    },
                    "prev": {
                        "type": "url",
                        "example": "null"
                    },
                    "next": {
                        "type": "url",
                        "example": "http://agm.test/cards?page=2"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PageLinks"
                }
            },
            "Card": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "dito"
                    },
                    "health_points": {
                        "type": "integer",
                        "example": "50"
                    },
                    "is_first_edition": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "is_taken": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "expansion_set": {
                        "type": "integer",
                        "example": "1"
                    },
                    "pokemon_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Fire"
                        }
                    },
                    "card_rarity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "price": {
                        "type": "number",
                        "example": "10.50"
                    },
                    "image_url": {
                        "type": "url",
                        "format": "url",
                        "example": "www.pokeimage.com/01"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2021-11-29"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Card"
                }
            },
            "enumJson": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "item name"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "InfoData"
                }
            }
        }
    }
}